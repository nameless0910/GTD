#+STARTUP: content
#+PROPERTY: Effort_ALL  0:10 0:20 0:30 1:00 2:00 4:00 6:00 8:00
#+COLUMNS: %38ITEM(Details) %TAGS(Context) %7TODO(To Do) %5Effort(Time){:} %6CLOCKSUM{Total}
#+PROPERTY: Effort_ALL 0 0:10 0:20 0:30 1:00 2:00 3:00 4:00 8:00
#+FILETAGS: :@task:
#+BEGIN: clocktable :maxlevel 2 :scope file
#+CAPTION: Clock summary at [2017-02-01 周三 22:12]
| Headline                                   | Time       |          |
|--------------------------------------------+------------+----------|
| *Total time*                               | *3d 15:41* |          |
|--------------------------------------------+------------+----------|
| BOOK                                       | 3d 11:58   |          |
| \_  TODO [#A] CPPP[63%]                    |            | 1d 13:24 |
| \_  TODO [#A] OpenGL Programming Guide[8%] |            |     2:56 |
| \_  TODO [#A] Unity 权威讲解[33%]          |            |     6:52 |
| \_  TODO [#B] 游戏编程算法与技巧[7%]       |            |     1:03 |
| \_  TODO [#B] Mathematics of 3D Game...    |            |     0:54 |
| \_  TODO [#B] Game Coding Complete[50%]    |            |  1d 7:57 |
| \_  TODO [#B] GEA[0%]                      |            |     0:27 |
| \_  TODO [#C] 程序员的自我修养             |            |     0:04 |
| \_  TODO [#C] Game Programming Patterns    |            |     0:59 |
| \_  TODO [#C] Windows 程序设计             |            |     1:22 |
| Things                                     | 3:43       |          |
| \_  TODO learn 1openGL                     |            |     3:43 |
#+END:
* BOOK                                                               :@book:
** TODO [#A] CPPP[63%]
   - [X] 开始
   - [X] 变量和基本类型
   - [X] 字符串，向量和数组
   - [X] 表达式
   - [X] 语句
   - [X] 函数
   - [X] 类
   - [X] IO 库
   - [X] 顺序容器
   - [X] 泛型算法
   - [X] 关联容器
   - [X] 动态内存
   - [ ] 拷贝控制
   - [ ] 重载运算与类型转换
   - [ ] 面向对象程序设计
   - [ ] 模版与泛型编程
   - [ ] 标准库特殊设施
   - [ ] 用于大型程序的工具
   - [ ] 特殊工具与技术
   :LOGBOOK:
   CLOCK: [2017-02-01 周三 20:56]--[2017-02-01 周三 22:11] =>  1:15
   CLOCK: [2017-02-01 周三 19:45]--[2017-02-01 周三 20:33] =>  0:48
   CLOCK: [2017-02-01 周三 17:07]--[2017-02-01 周三 17:58] =>  0:51
   CLOCK: [2017-02-01 周三 16:06]--[2017-02-01 周三 16:55] =>  0:49
   CLOCK: [2017-02-01 周三 00:20]--[2017-02-01 周三 00:49] =>  0:29
   CLOCK: [2017-01-31 周二 23:46]--[2017-02-01 周三 00:05] =>  0:19
   CLOCK: [2017-01-31 周二 23:00]--[2017-01-31 周二 23:36] =>  0:36
   CLOCK: [2017-01-31 周二 22:12]--[2017-01-31 周二 22:51] =>  0:39
   CLOCK: [2017-01-31 周二 21:12]--[2017-01-31 周二 21:55] =>  0:43
   CLOCK: [2017-01-31 周二 19:28]--[2017-01-31 周二 20:17] =>  0:49
   CLOCK: [2017-01-31 周二 19:07]--[2017-01-31 周二 19:26] =>  0:19
   CLOCK: [2017-01-31 周二 17:50]--[2017-01-31 周二 17:57] =>  0:07
   CLOCK: [2017-01-31 周二 16:46]--[2017-01-31 周二 17:40] =>  0:54
   CLOCK: [2017-01-31 周二 16:34]--[2017-01-31 周二 16:43] =>  0:09
   CLOCK: [2017-01-30 周一 16:12]--[2017-01-30 周一 17:18] =>  1:06
   CLOCK: [2017-01-30 周一 15:00]--[2017-01-30 周一 15:40] =>  0:40
   CLOCK: [2017-01-30 周一 12:30]--[2017-01-30 周一 14:59] =>  2:29
   CLOCK: [2017-01-29 周日 23:40]--[2017-01-29 周日 23:54] =>  0:14
   CLOCK: [2017-01-29 周日 22:45]--[2017-01-29 周日 23:33] =>  0:48
   CLOCK: [2017-01-29 周日 21:15]--[2017-01-29 周日 22:40] =>  1:25
   CLOCK: [2017-01-29 周日 19:39]--[2017-01-29 周日 20:25] =>  0:46
   CLOCK: [2017-01-29 周日 19:08]--[2017-01-29 周日 19:27] =>  0:19
   CLOCK: [2017-01-29 周日 18:41]--[2017-01-29 周日 18:53] =>  0:12
   CLOCK: [2017-01-28 周六 21:03]--[2017-01-28 周六 22:28] =>  1:25
   CLOCK: [2017-01-28 周六 18:15]--[2017-01-28 周六 19:06] =>  0:51
   CLOCK: [2017-01-28 周六 16:52]--[2017-01-28 周六 18:08] =>  1:16
   CLOCK: [2017-01-26 周四 16:16]--[2017-01-26 周四 16:56] =>  0:40
   CLOCK: [2017-01-21 周六 16:12]--[2017-01-21 周六 17:12] =>  1:00
   CLOCK: [2017-01-21 周六 14:36]--[2017-01-21 周六 14:53] =>  0:17
   CLOCK: [2017-01-21 周六 12:47]--[2017-01-21 周六 13:41] =>  0:54
   CLOCK: [2017-01-21 周六 11:44]--[2017-01-21 周六 12:41] =>  0:57
   CLOCK: [2017-01-21 周六 10:38]--[2017-01-21 周六 11:22] =>  0:44
   CLOCK: [2017-01-20 周五 15:47]--[2017-01-20 周五 17:15] =>  1:28
   CLOCK: [2017-01-20 周五 14:45]--[2017-01-20 周五 15:40] =>  0:55
   CLOCK: [2017-01-20 周五 13:56]--[2017-01-20 周五 14:35] =>  0:39
   CLOCK: [2017-01-20 周五 11:48]--[2017-01-20 周五 12:15] =>  0:27
   CLOCK: [2017-01-20 周五 10:37]--[2017-01-20 周五 11:39] =>  1:02
   CLOCK: [2017-01-19 周四 22:58]--[2017-01-19 周四 23:20] =>  0:22
   CLOCK: [2017-01-19 周四 22:10]--[2017-01-19 周四 22:53] =>  0:43
   CLOCK: [2017-01-19 周四 21:36]--[2017-01-19 周四 22:02] =>  0:26
   CLOCK: [2017-01-19 周四 21:18]--[2017-01-19 周四 21:30] =>  0:12
   CLOCK: [2017-01-19 周四 20:07]--[2017-01-19 周四 21:01] =>  0:54
   CLOCK: [2017-01-19 周四 19:19]--[2017-01-19 周四 19:58] =>  0:39
   CLOCK: [2017-01-19 周四 17:02]--[2017-01-19 周四 17:45] =>  0:43
   CLOCK: [2017-01-19 周四 14:35]--[2017-01-19 周四 14:40] =>  0:05
   CLOCK: [2017-01-19 周四 14:20]--[2017-01-19 周四 14:34] =>  0:14
   CLOCK: [2017-01-19 周四 12:44]--[2017-01-19 周四 13:05] =>  0:21
   CLOCK: [2017-01-19 四 04:38]--[2017-01-19 四 05:12] =>  0:34
   CLOCK: [2017-01-19 四 03:56]--[2017-01-19 四 04:24] =>  0:28
   CLOCK: [2017-01-19 四 01:45]--[2017-01-19 四 02:17] =>  0:32
   CLOCK: [2017-01-19 四 00:36]--[2017-01-19 四 01:20] =>  0:44
   CLOCK: [2017-01-19 四 00:33]--[2017-01-19 四 00:36] =>  0:03
   CLOCK: [2017-01-19 四 00:05]--[2017-01-19 四 00:13] =>  0:08
   CLOCK: [2017-01-18 三 23:49]--[2017-01-19 四 00:05] =>  0:16
   CLOCK: [2017-01-18 三 22:33]--[2017-01-18 三 23:12] =>  0:39
   :END:
** TODO [#A] CLRS
** TODO [#A] OpenGL Programming Guide[8%]
   - [X] Introduction to OpenGL
   - [ ] Shader Fundamentals
   - [ ] Drawing with OpenGL
   - [ ] Color,Pixels,and Framework
   - [ ] Viewing Transformations,Clipping,and FeedBack
   - [ ] Texture
   - [ ] Light and Shadow
   - [ ] Procedural Texturing
   - [ ] Tessellation Shaders
   - [ ] Geometry Shaders
   - [ ] Memory
   - [ ] Compute Shaders
  :LOGBOOK:
  CLOCK: [2017-01-21 周六 23:34]--[2017-01-21 周六 23:58] =>  0:24
  CLOCK: [2017-01-21 周六 22:52]--[2017-01-21 周六 23:24] =>  0:32
  CLOCK: [2017-01-20 周五 23:38]--[2017-01-21 周六 00:05] =>  0:27
   CLOCK: [2017-01-20 周五 22:45]--[2017-01-20 周五 23:31] =>  0:46
   CLOCK: [2017-01-18 周三 21:42]--[2017-01-18 周三 22:29] =>  0:47
  :END:
** TODO [#A] Unity 权威讲解[33%]
   - [X] Unity 5 简介
   - [X] 准备游戏开发
   - [X] 制作游戏场景
   - [X] 制作主人公角色
   - [X] 制作子弹发射效果
   - [ ] 制作敌对角色
   - [ ] Unity UI
   - [ ] 游戏管理器
   - [ ] 灵活运用射线透射
   - [ ] 导航仪高级技巧
   - [ ] 光照贴图，灯光探测器
   - [ ] 场景分离与合并
   - [ ] Unity 内置网络游戏
   - [ ] 使用 Photon Cloud 制作网络游戏
   - [ ] 提升游戏真实感
   :LOGBOOK:
   CLOCK: [2017-01-21 周六 20:20]--[2017-01-21 周六 22:39] =>  2:19
   CLOCK: [2017-01-21 周六 18:32]--[2017-01-21 周六 19:00] =>  0:28
   CLOCK: [2017-01-20 周五 21:35]--[2017-01-20 周五 21:58] =>  0:23
   CLOCK: [2017-01-20 周五 20:24]--[2017-01-20 周五 21:27] =>  1:03
   CLOCK: [2017-01-20 周五 19:42]--[2017-01-20 周五 20:13] =>  0:31
   CLOCK: [2017-01-19 周四 23:41]--[2017-01-20 周五 00:05] =>  0:24
   CLOCK: [2017-01-18 周三 11:35]--[2017-01-18 周三 12:11] =>  0:36
   CLOCK: [2017-01-18 周三 10:29]--[2017-01-18 周三 11:20] =>  0:51
   CLOCK: [2017-01-17 周二 23:29]--[2017-01-17 周二 23:46] =>  0:17
   :END:
** TODO [#A] 程序员修炼之道
** TODO [#A] 数据库系统概念[3%]
   - [X] 引言
   - [ ] 关系模型介绍
   - [ ] SQL
   - [ ] 中级 SQL
   - [ ] 高级 SQL
   - [ ] 形式化关系查询语言
   - [ ] 数据库设计和 E-R 模型
   - [ ] 关系数据库设计
   - [ ] 应用设计和开发
   - [ ] 存储和文件结构
   - [ ] 索引与散列
   - [ ] 查询处理
   - [ ] 查询优化
   - [ ] 事务
   - [ ] 并发控制
   - [ ] 恢复系统
   - [ ] 数据库系统体系结构
   - [ ] 并行数据库
   - [ ] 分布式数据库
   - [ ] 数据仓库与数据挖掘
   - [ ] 信息检索
   - [ ] 基于对象的数据库
   - [ ] XML
   - [ ] 高级应用开发
   - [ ] 时空数据和移动性
   - [ ] 高级事务处理
   - [ ] PostgreSQL
   - [ ] Oracle
   - [ ] IBＭ　DB2
   - [ ] SQL Server
   :LOGBOOK:
   CLOCK: [2017-02-01 周三 22:26]--[2017-02-01 周三 23:06] =>  0:40
   :END:
** TODO [#B] 游戏编程算法与技巧[7%]
   - [X] 游戏编程概述
   - [ ] 2D 图形
   - [ ] 游戏中的线性代数
   - [ ] 3D 图形
   - [ ] 游戏输入
   - [ ] 声音
   - [ ] 物理
   - [ ] 摄像机
   - [ ] 人工智能
   - [ ] 用户界面
   - [ ] 脚本语言和数据格式
   - [ ] 网络游戏
   - [ ] 横向滚屏者
   - [ ] 塔防
   :LOGBOOK:
   CLOCK: [2017-01-11 三 17:23]--[2017-01-11 三 17:36] =>  0:13
   CLOCK: [2017-01-11 周三 16:50]--[2017-01-11 周三 17:14] =>  0:24
   CLOCK: [2017-01-11 周三 13:43]--[2017-01-11 周三 14:09] =>  0:26
   :END:
** TODO [#B] Mathematics of 3D Game Programming and Computer Graphics[12%]
   - [X] 渲染管线
   - [X] 向量
   - [ ] 矩阵
   - [ ] 坐标变换
   - [ ] 3D 引擎中的几何学
   - [ ] 光线跟踪
   - [ ] 光照与着色
   - [ ] 可见性判断
   - [ ] 多边形技术
   - [ ] 阴影
   - [ ] 曲线与曲面
   - [ ] 碰撞检测
   - [ ] 线性物理运动
   - [ ] 旋转物理运动
   - [ ] 流体与织物仿真
   - [ ] 数值方法   
   DEADLINE: <2016-12-23 五> SCHEDULED: <2016-12-13 二>
    :LOGBOOK:
    CLOCK: [2016-12-13 二 18:48]--[2016-12-13 二 19:42] =>  0:54
   :END:   
** TODO [#B] Game Coding Complete[50%]
   - [X] 什么是游戏编程
   - [X] 游戏中有什么
   - [X] 拯救了我的编码趣闻和风格
   - [X] 生成游戏
   - [X] 游戏初始化和关闭
   - [X] 游戏主体和组件结构
   - [X] 主循环的控制
   - [X] 游戏数据的加载和缓存
   - [X] 输入设备编程 
   - [X] 用户界面编程
   - [ ] 游戏事件管理
   - [ ] 使用 Lua 编写脚本
   - [ ] 游戏音频
   - [X] 3D 图形基础
   - [ ] 3D 顶点和像素着色器
   - [ ] 3D 场景
   - [X] 碰撞和简单的物理学 ?
   - [ ] 游戏 AI 简介
   - [ ] 多玩家游戏的网络编程
   - [ ] 多道程序设计简介
   - [ ] “茶壶大战”游戏
   - [ ] C#中简单的游戏编辑器
   - [ ] 对游戏进行调试和分析
   - [ ] 驶向结束
   :LOGBOOK:
   CLOCK: [2017-01-07 周六 19:20]--[2017-01-07 周六 19:27] =>  0:07
   CLOCK: [2017-01-06 周五 16:22]--[2017-01-06 周五 16:28] =>  0:06
   CLOCK: [2017-01-05 周四 22:15]--[2017-01-05 周四 22:17] =>  0:02
   CLOCK: [2017-01-05 周四 20:43]--[2017-01-05 周四 20:47] =>  0:04
   CLOCK: [2017-01-05 周四 19:17]--[2017-01-05 周四 19:57] =>  0:40
   CLOCK: [2017-01-02 周一 16:26]--[2017-01-02 周一 16:44] =>  0:18
   CLOCK: [2017-01-02 周一 14:07]--[2017-01-02 周一 14:48] =>  0:41
   CLOCK: [2016-12-28 周三 17:12]--[2016-12-28 周三 19:53] =>  2:41
   CLOCK: [2016-12-28 周三 11:28]--[2016-12-28 周三 11:30] =>  0:02
   CLOCK: [2016-12-28 周三 09:51]--[2016-12-28 周三 11:00] =>  1:09
   CLOCK: [2016-12-28 周三 08:53]--[2016-12-28 周三 09:08] =>  0:15
   CLOCK: [2016-12-27 周二 23:18]--[2016-12-27 周二 23:20] =>  0:02
   CLOCK: [2016-12-27 周二 19:10]--[2016-12-27 周二 19:58] =>  0:48
   CLOCK: [2016-12-27 周二 16:54]--[2016-12-27 周二 17:42] =>  0:48
   CLOCK: [2016-12-27 周二 16:06]--[2016-12-27 周二 16:21] =>  0:15
   CLOCK: [2016-12-26 周一 18:50]--[2016-12-26 周一 20:10] =>  1:20
   CLOCK: [2016-12-26 周一 17:59]--[2016-12-26 周一 18:37] =>  0:38
   CLOCK: [2016-12-22 周四 16:40]--[2016-12-22 周四 17:56] =>  1:16
   CLOCK: [2016-12-22 周四 13:57]--[2016-12-22 周四 14:40] =>  0:43
   CLOCK: [2016-12-21 周三 22:59]--[2016-12-22 周四 01:51] =>  2:52
   CLOCK: [2016-12-21 周三 19:14]--[2016-12-21 周三 21:11] =>  1:57
   CLOCK: [2016-12-21 周三 17:08]--[2016-12-21 周三 17:58] =>  0:50
   CLOCK: [2016-12-21 周三 13:43]--[2016-12-21 周三 14:35] =>  0:52
   CLOCK: [2016-12-20 周二 23:33]--[2016-12-20 周二 23:46] =>  0:13
   CLOCK: [2016-12-20 周二 21:45]--[2016-12-20 周二 23:17] =>  1:32
   CLOCK: [2016-12-20 周二 18:01]--[2016-12-20 周二 19:00] =>  0:59
   CLOCK: [2016-12-20 周二 16:59]--[2016-12-20 周二 17:28] =>  0:29
   CLOCK: [2016-12-20 周二 07:57]--[2016-12-20 周二 08:44] =>  0:47
   CLOCK: [2016-12-20 周二 05:05]--[2016-12-20 周二 06:25] =>  1:20
   CLOCK: [2016-12-19 周一 15:43]--[2016-12-19 周一 15:47] =>  0:04
   CLOCK: [2016-12-19 周一 15:29]--[2016-12-19 周一 15:41] =>  0:12
   CLOCK: [2016-12-19 周一 15:23]--[2016-12-19 周一 15:26] =>  0:03
   CLOCK: [2016-12-19 周一 15:06]--[2016-12-19 周一 15:19] =>  0:13
   CLOCK: [2016-12-18 周日 01:22]--[2016-12-18 周日 02:15] =>  0:53
   CLOCK: [2016-12-17 周六 20:47]--[2016-12-17 周六 21:55] =>  1:08
   CLOCK: [2016-12-16 周五 22:02]--[2016-12-16 周五 22:19] =>  0:17
   CLOCK: [2016-12-15 周四 15:11]--[2016-12-15 周四 16:41] =>  1:30
   CLOCK: [2016-12-15 周四 01:35]--[2016-12-15 周四 02:05] =>  0:30
   CLOCK: [2016-12-15 周四 01:11]--[2016-12-15 周四 01:25] =>  0:14
   CLOCK: [2016-12-15 周四 00:56]--[2016-12-15 周四 01:10] =>  0:14
   CLOCK: [2016-12-15 四 05:21]--[2016-12-15 四 06:16] =>  0:55
   CLOCK: [2016-12-14 周三 19:02]--[2016-12-14 周三 19:08] =>  0:06
   CLOCK: [2016-12-14 周三 17:11]--[2016-12-14 周三 18:13] =>  1:02
   CLOCK: [2016-12-14 周三 16:15]--[2016-12-14 周三 17:05] =>  0:50
   :END:
   DEADLINE: <2016-12-31 周六> SCHEDULED: <2016-12-14 周三>
** TODO [#B] GEA[0%]
   - [ ] 导论
   - [ ] 专业工具
   - [ ] 游戏软件工程基础
   - [ ] 游戏所需的三维数学
   - [ ] 游戏支持系统
   - [ ] 资源及文件系统
   - [ ] 游戏循环及实时模拟
   - [ ] 人体学接口设备
   - [ ] 调试及开发工具
   - [ ] 渲染引擎
   - [ ] 动画系统
   - [ ] 碰撞及刚体动力学
   - [ ] 游戏性系统简介
   - [ ] 运行时游戏性基础系统
   - [ ] 还有更多内容吗
   :LOGBOOK:
   CLOCK: [2017-01-06 周五 15:55]--[2017-01-06 周五 16:22] =>  0:27
   :END:
** TODO [#C] 程序员的自我修养
   :LOGBOOK:
   CLOCK: [2017-01-04 周三 16:09]--[2017-01-04 周三 16:13] =>  0:04
   :END:
** TODO [#C] Game Programming Patterns
   :LOGBOOK:
   CLOCK: [2017-01-05 周四 22:25]--[2017-01-05 周四 23:24] =>  0:59
   :END:
** TODO [#C] Windows 程序设计
   - [X] 起步
   - [X] Unicode 简介
   - [X] 窗口与消息
   - [ ] 文本输出
   - [ ] 绘图基础
   - [ ] 键盘
   - [ ] 鼠标
   - [ ] 计时器
   - [ ] 子窗口控件
   - [ ] 菜单和其他资源
   - [ ] 对话框
   - [ ] 剪贴板
   - [ ] 使用打印机
   - [ ] 位图和位块传输
   - [ ] 设备无关位图
   - [ ] 调色板管理器
   - [ ] 文本和字体
   - [ ] 图元文件
   - [ ] 多文档界面
   - [ ] 多任务和多线程
   - [ ] 动态链接库
   - [ ] 声音和音乐
   - [ ] 尝试互联网
   :LOGBOOK:
   CLOCK: [2016-12-19 周一 13:13]--[2016-12-19 周一 13:52] =>  0:39
   CLOCK: [2016-12-19 周一 12:10]--[2016-12-19 周一 12:47] =>  0:37
   CLOCK: [2016-12-19 周一 12:01]--[2016-12-19 周一 12:07] =>  0:06
   :END:
** TODO [#C] Multiplayer Game Programming
* Homework
* Things
** TODO Blog
** TODO learn 1openGL 
   :LOGBOOK:
   CLOCK: [2017-02-01 周三 15:34]--[2017-02-01 周三 15:56] =>  0:22
   CLOCK: [2017-02-01 周三 14:17]--[2017-02-01 周三 14:42] =>  0:25
   CLOCK: [2017-01-31 周二 14:08]--[2017-01-31 周二 14:17] =>  0:09
   CLOCK: [2017-01-31 周二 12:14]--[2017-01-31 周二 14:02] =>  1:48
   CLOCK: [2017-01-31 周二 11:06]--[2017-01-31 周二 12:05] =>  0:59
   :END:
* Daily                                                             :@daily:
** TODO 练习双拼和英文打字


