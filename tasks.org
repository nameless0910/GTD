#+STARTUP: content
#+PROPERTY: Effort_ALL  0:10 0:20 0:30 1:00 2:00 4:00 6:00 8:00
#+COLUMNS: %38ITEM(Details) %TAGS(Context) %7TODO(To Do) %5Effort(Time){:} %6CLOCKSUM{Total}
#+PROPERTY: Effort_ALL 0 0:10 0:20 0:30 1:00 2:00 3:00 4:00 8:00
#+FILETAGS: :@task:
#+BEGIN: clocktable :maxlevel 2 :scope file
#+CAPTION: Clock summary at [2017-04-09 Sun 14:33]
| Headline                                   | Time      |         |
|--------------------------------------------+-----------+---------|
| *Total time*                               | *4d 9:39* |         |
|--------------------------------------------+-----------+---------|
| BOOK                                       | 4d 9:39   |         |
| \_  TODO [#A] OpenGL Programming Guide[8%] |           |    2:56 |
| \_  TODO [#A] Unity 权威讲解[33%]          |           |    6:52 |
| \_  TODO [#A] 数据库系统概念[16%]          |           |    4:49 |
| \_  TODO [#B] 游戏编程算法与技巧[7%]       |           |    1:03 |
| \_  TODO [#B] Mathematics of 3D Game...    |           |    0:54 |
| \_  TODO [#B] Game Coding Complete[50%]    |           | 1d 7:57 |
| \_  TODO [#B] GEA[0%]                      |           |    0:27 |
| \_  TODO [#C] 程序员的自我修养[15%]        |           |    1:06 |
| \_  TODO [#C] Game Programming Patterns    |           |    0:59 |
| \_  TODO [#C] Windows 程序设计             |           |    1:22 |
| \_  TODO [#B] 面向对象的游戏开发[27%]      |           |    2:37 |
| \_  TODO [#A] C++语言的设计及演化          |           |    2:01 |
| \_  TODO [#A] 深度探索 C++对象模型[14%]    |           |    1:28 |
| \_  TODO [#A] C++标准库[21%]               |           |    5:33 |
| \_  TODO [#B] 代码大全 2[5%]               |           |    0:36 |
| \_  WAIT [#C] C++模板元编程[58%]           |           |    9:13 |
| \_  TODO [#B] 面向对象分析与设计[0%]       |           |    0:45 |
| \_  TODO [#B] 程序设计语言--实践之路[12%]  |           |    5:03 |
| \_  TODO [#B] 编程原本[8%]                 |           |    1:00 |
| \_  TODO [#A] 算法[0%]                     |           |    4:58 |
| \_  TODO [#A] 泛型编程与 STL[0%]           |           |    0:27 |
| \_  TODO [#A] 第一行代码[6%]               |           |    1:08 |
| \_  TODO [#B] STL 源码剖析[11%]            |           |    2:39 |
| \_  TODO [#A] Effective C++[33%]           |           |    2:48 |
| \_  TODO [#A] Linux 多线程服务端编程[18%]  |           |    0:56 |
| \_  TODO [#A] TCP/IP 详解[0%]p.6           |           |    1:01 |
| \_  TODO [#A] Unix Network Programming[9%] |           |    7:55 |
| \_  TODO [#A] 图解 TCP/IP[10%]             |           |    1:01 |
| \_  TODO [#A] Java 核心技术卷一[66%]       |           |    2:05 |
#+END:
* BOOK                                                               :@book:
** TODO [#A] CLRS
** TODO [#A] OpenGL Programming Guide[8%]
   - [X] Introduction to OpenGL
   - [ ] Shader Fundamentals
   - [ ] Drawing with OpenGL
   - [ ] Color,Pixels,and Framework
   - [ ] Viewing Transformations,Clipping,and FeedBack
   - [ ] Texture
   - [ ] Light and Shadow
   - [ ] Procedural Texturing
   - [ ] Tessellation Shaders
   - [ ] Geometry Shaders
   - [ ] Memory
   - [ ] Compute Shaders
  :LOGBOOK:
  CLOCK: [2017-01-21 周六 23:34]--[2017-01-21 周六 23:58] =>  0:24
  CLOCK: [2017-01-21 周六 22:52]--[2017-01-21 周六 23:24] =>  0:32
  CLOCK: [2017-01-20 周五 23:38]--[2017-01-21 周六 00:05] =>  0:27
   CLOCK: [2017-01-20 周五 22:45]--[2017-01-20 周五 23:31] =>  0:46
   CLOCK: [2017-01-18 周三 21:42]--[2017-01-18 周三 22:29] =>  0:47
  :END:
** TODO [#A] Unity 权威讲解[33%]
   - [X] Unity 5 简介
   - [X] 准备游戏开发
   - [X] 制作游戏场景
   - [X] 制作主人公角色
   - [X] 制作子弹发射效果
   - [ ] 制作敌对角色
   - [ ] Unity UI
   - [ ] 游戏管理器
   - [ ] 灵活运用射线透射
   - [ ] 导航仪高级技巧
   - [ ] 光照贴图，灯光探测器
   - [ ] 场景分离与合并
   - [ ] Unity 内置网络游戏
   - [ ] 使用 Photon Cloud 制作网络游戏
   - [ ] 提升游戏真实感
   :LOGBOOK:
   CLOCK: [2017-01-21 周六 20:20]--[2017-01-21 周六 22:39] =>  2:19
   CLOCK: [2017-01-21 周六 18:32]--[2017-01-21 周六 19:00] =>  0:28
   CLOCK: [2017-01-20 周五 21:35]--[2017-01-20 周五 21:58] =>  0:23
   CLOCK: [2017-01-20 周五 20:24]--[2017-01-20 周五 21:27] =>  1:03
   CLOCK: [2017-01-20 周五 19:42]--[2017-01-20 周五 20:13] =>  0:31
   CLOCK: [2017-01-19 周四 23:41]--[2017-01-20 周五 00:05] =>  0:24
   CLOCK: [2017-01-18 周三 11:35]--[2017-01-18 周三 12:11] =>  0:36
   CLOCK: [2017-01-18 周三 10:29]--[2017-01-18 周三 11:20] =>  0:51
   CLOCK: [2017-01-17 周二 23:29]--[2017-01-17 周二 23:46] =>  0:17
   :END:
** TODO [#A] 程序员修炼之道
** TODO [#A] 数据库系统概念[16%]
   - [X] 引言
   - [X] 关系模型介绍
   - [X] SQL
   - [X] 中级 SQL
   - [X] 高级 SQL
   - [ ] 形式化关系查询语言
   - [ ] 数据库设计和 E-R 模型
   - [ ] 关系数据库设计
   - [ ] 应用设计和开发
   - [ ] 存储和文件结构
   - [ ] 索引与散列
   - [ ] 查询处理
   - [ ] 查询优化
   - [ ] 事务
   - [ ] 并发控制
   - [ ] 恢复系统
   - [ ] 数据库系统体系结构
   - [ ] 并行数据库
   - [ ] 分布式数据库
   - [ ] 数据仓库与数据挖掘
   - [ ] 信息检索
   - [ ] 基于对象的数据库
   - [ ] XML
   - [ ] 高级应用开发
   - [ ] 时空数据和移动性
   - [ ] 高级事务处理
   - [ ] PostgreSQL
   - [ ] Oracle
   - [ ] IBＭ　DB2
   - [ ] SQL Server
   :LOGBOOK:
   CLOCK: [2017-02-20 周一 17:39]--[2017-02-20 周一 18:28] =>  0:49
   CLOCK: [2017-02-20 周一 16:48]--[2017-02-20 周一 17:29] =>  0:41
   CLOCK: [2017-02-20 周一 15:53]--[2017-02-20 周一 16:29] =>  0:36
   CLOCK: [2017-02-05 周日 22:05]--[2017-02-05 周日 22:20] =>  0:15
   CLOCK: [2017-02-05 周日 20:53]--[2017-02-05 周日 21:44] =>  0:51
   CLOCK: [2017-02-03 周五 23:40]--[2017-02-03 周五 23:46] =>  0:06
   CLOCK: [2017-02-03 周五 22:55]--[2017-02-03 周五 23:30] =>  0:35
   CLOCK: [2017-02-02 周四 22:08]--[2017-02-02 周四 22:24] =>  0:16
   CLOCK: [2017-02-01 周三 22:26]--[2017-02-01 周三 23:06] =>  0:40
   :END:
** TODO [#B] 游戏编程算法与技巧[7%]
   - [X] 游戏编程概述
   - [ ] 2D 图形
   - [ ] 游戏中的线性代数
   - [ ] 3D 图形
   - [ ] 游戏输入
   - [ ] 声音
   - [ ] 物理
   - [ ] 摄像机
   - [ ] 人工智能
   - [ ] 用户界面
   - [ ] 脚本语言和数据格式
   - [ ] 网络游戏
   - [ ] 横向滚屏者
   - [ ] 塔防
   :LOGBOOK:
   CLOCK: [2017-01-11 三 17:23]--[2017-01-11 三 17:36] =>  0:13
   CLOCK: [2017-01-11 周三 16:50]--[2017-01-11 周三 17:14] =>  0:24
   CLOCK: [2017-01-11 周三 13:43]--[2017-01-11 周三 14:09] =>  0:26
   :END:
** TODO [#B] Mathematics of 3D Game Programming and Computer Graphics[12%]
   - [X] 渲染管线
   - [X] 向量
   - [ ] 矩阵
   - [ ] 坐标变换
   - [ ] 3D 引擎中的几何学
   - [ ] 光线跟踪
   - [ ] 光照与着色
   - [ ] 可见性判断
   - [ ] 多边形技术
   - [ ] 阴影
   - [ ] 曲线与曲面
   - [ ] 碰撞检测
   - [ ] 线性物理运动
   - [ ] 旋转物理运动
   - [ ] 流体与织物仿真
   - [ ] 数值方法   
   DEADLINE: <2016-12-23 五> SCHEDULED: <2016-12-13 二>
    :LOGBOOK:
    CLOCK: [2016-12-13 二 18:48]--[2016-12-13 二 19:42] =>  0:54
   :END:   
** TODO [#B] Game Coding Complete[50%]
   - [X] 什么是游戏编程
   - [X] 游戏中有什么
   - [X] 拯救了我的编码趣闻和风格
   - [X] 生成游戏
   - [X] 游戏初始化和关闭
   - [X] 游戏主体和组件结构
   - [X] 主循环的控制
   - [X] 游戏数据的加载和缓存
   - [X] 输入设备编程 
   - [X] 用户界面编程
   - [ ] 游戏事件管理
   - [ ] 使用 Lua 编写脚本
   - [ ] 游戏音频
   - [X] 3D 图形基础
   - [ ] 3D 顶点和像素着色器
   - [ ] 3D 场景
   - [X] 碰撞和简单的物理学 ?
   - [ ] 游戏 AI 简介
   - [ ] 多玩家游戏的网络编程
   - [ ] 多道程序设计简介
   - [ ] “茶壶大战”游戏
   - [ ] C#中简单的游戏编辑器
   - [ ] 对游戏进行调试和分析
   - [ ] 驶向结束
   :LOGBOOK:
   CLOCK: [2017-01-07 周六 19:20]--[2017-01-07 周六 19:27] =>  0:07
   CLOCK: [2017-01-06 周五 16:22]--[2017-01-06 周五 16:28] =>  0:06
   CLOCK: [2017-01-05 周四 22:15]--[2017-01-05 周四 22:17] =>  0:02
   CLOCK: [2017-01-05 周四 20:43]--[2017-01-05 周四 20:47] =>  0:04
   CLOCK: [2017-01-05 周四 19:17]--[2017-01-05 周四 19:57] =>  0:40
   CLOCK: [2017-01-02 周一 16:26]--[2017-01-02 周一 16:44] =>  0:18
   CLOCK: [2017-01-02 周一 14:07]--[2017-01-02 周一 14:48] =>  0:41
   CLOCK: [2016-12-28 周三 17:12]--[2016-12-28 周三 19:53] =>  2:41
   CLOCK: [2016-12-28 周三 11:28]--[2016-12-28 周三 11:30] =>  0:02
   CLOCK: [2016-12-28 周三 09:51]--[2016-12-28 周三 11:00] =>  1:09
   CLOCK: [2016-12-28 周三 08:53]--[2016-12-28 周三 09:08] =>  0:15
   CLOCK: [2016-12-27 周二 23:18]--[2016-12-27 周二 23:20] =>  0:02
   CLOCK: [2016-12-27 周二 19:10]--[2016-12-27 周二 19:58] =>  0:48
   CLOCK: [2016-12-27 周二 16:54]--[2016-12-27 周二 17:42] =>  0:48
   CLOCK: [2016-12-27 周二 16:06]--[2016-12-27 周二 16:21] =>  0:15
   CLOCK: [2016-12-26 周一 18:50]--[2016-12-26 周一 20:10] =>  1:20
   CLOCK: [2016-12-26 周一 17:59]--[2016-12-26 周一 18:37] =>  0:38
   CLOCK: [2016-12-22 周四 16:40]--[2016-12-22 周四 17:56] =>  1:16
   CLOCK: [2016-12-22 周四 13:57]--[2016-12-22 周四 14:40] =>  0:43
   CLOCK: [2016-12-21 周三 22:59]--[2016-12-22 周四 01:51] =>  2:52
   CLOCK: [2016-12-21 周三 19:14]--[2016-12-21 周三 21:11] =>  1:57
   CLOCK: [2016-12-21 周三 17:08]--[2016-12-21 周三 17:58] =>  0:50
   CLOCK: [2016-12-21 周三 13:43]--[2016-12-21 周三 14:35] =>  0:52
   CLOCK: [2016-12-20 周二 23:33]--[2016-12-20 周二 23:46] =>  0:13
   CLOCK: [2016-12-20 周二 21:45]--[2016-12-20 周二 23:17] =>  1:32
   CLOCK: [2016-12-20 周二 18:01]--[2016-12-20 周二 19:00] =>  0:59
   CLOCK: [2016-12-20 周二 16:59]--[2016-12-20 周二 17:28] =>  0:29
   CLOCK: [2016-12-20 周二 07:57]--[2016-12-20 周二 08:44] =>  0:47
   CLOCK: [2016-12-20 周二 05:05]--[2016-12-20 周二 06:25] =>  1:20
   CLOCK: [2016-12-19 周一 15:43]--[2016-12-19 周一 15:47] =>  0:04
   CLOCK: [2016-12-19 周一 15:29]--[2016-12-19 周一 15:41] =>  0:12
   CLOCK: [2016-12-19 周一 15:23]--[2016-12-19 周一 15:26] =>  0:03
   CLOCK: [2016-12-19 周一 15:06]--[2016-12-19 周一 15:19] =>  0:13
   CLOCK: [2016-12-18 周日 01:22]--[2016-12-18 周日 02:15] =>  0:53
   CLOCK: [2016-12-17 周六 20:47]--[2016-12-17 周六 21:55] =>  1:08
   CLOCK: [2016-12-16 周五 22:02]--[2016-12-16 周五 22:19] =>  0:17
   CLOCK: [2016-12-15 周四 15:11]--[2016-12-15 周四 16:41] =>  1:30
   CLOCK: [2016-12-15 周四 01:35]--[2016-12-15 周四 02:05] =>  0:30
   CLOCK: [2016-12-15 周四 01:11]--[2016-12-15 周四 01:25] =>  0:14
   CLOCK: [2016-12-15 周四 00:56]--[2016-12-15 周四 01:10] =>  0:14
   CLOCK: [2016-12-15 四 05:21]--[2016-12-15 四 06:16] =>  0:55
   CLOCK: [2016-12-14 周三 19:02]--[2016-12-14 周三 19:08] =>  0:06
   CLOCK: [2016-12-14 周三 17:11]--[2016-12-14 周三 18:13] =>  1:02
   CLOCK: [2016-12-14 周三 16:15]--[2016-12-14 周三 17:05] =>  0:50
   :END:
   DEADLINE: <2016-12-31 周六> SCHEDULED: <2016-12-14 周三>
** TODO [#B] GEA[0%]
   - [ ] 导论
   - [ ] 专业工具
   - [ ] 游戏软件工程基础
   - [ ] 游戏所需的三维数学
   - [ ] 游戏支持系统
   - [ ] 资源及文件系统
   - [ ] 游戏循环及实时模拟
   - [ ] 人体学接口设备
   - [ ] 调试及开发工具
   - [ ] 渲染引擎
   - [ ] 动画系统
   - [ ] 碰撞及刚体动力学
   - [ ] 游戏性系统简介
   - [ ] 运行时游戏性基础系统
   - [ ] 还有更多内容吗
   :LOGBOOK:
   CLOCK: [2017-01-06 周五 15:55]--[2017-01-06 周五 16:22] =>  0:27
   :END:
** TODO [#C] 程序员的自我修养[15%]
   - [X] 温故而知新
   - [X] 编译和链接
   - [ ] 目标文件里有什么
   - [ ] 静态链接
   - [ ] Windows PE/COFF
   - [ ] 可执行文件的装载与进程
   - [ ] 动态链接
   - [ ] Linux 共享库的组织
   - [ ] Windows 下的动态链接
   - [ ] 内存
   - [ ] 运行库
   - [ ] 系统调用与 API
   - [ ] 运行库实现
   :LOGBOOK:
   CLOCK: [2017-02-23 周四 21:21]--[2017-02-23 周四 21:40] =>  0:19
   CLOCK: [2017-02-22 周三 23:53]--[2017-02-23 周四 00:36] =>  0:43
   CLOCK: [2017-01-04 周三 16:09]--[2017-01-04 周三 16:13] =>  0:04
   :END: 
** TODO [#C] Game Programming Patterns
   :LOGBOOK:
   CLOCK: [2017-01-05 周四 22:25]--[2017-01-05 周四 23:24] =>  0:59
   :END:
** TODO [#C] Windows 程序设计
   - [X] 起步
   - [X] Unicode 简介
   - [X] 窗口与消息
   - [ ] 文本输出
   - [ ] 绘图基础
   - [ ] 键盘
   - [ ] 鼠标
   - [ ] 计时器
   - [ ] 子窗口控件
   - [ ] 菜单和其他资源
   - [ ] 对话框
   - [ ] 剪贴板
   - [ ] 使用打印机
   - [ ] 位图和位块传输
   - [ ] 设备无关位图
   - [ ] 调色板管理器
   - [ ] 文本和字体
   - [ ] 图元文件
   - [ ] 多文档界面
   - [ ] 多任务和多线程
   - [ ] 动态链接库
   - [ ] 声音和音乐
   - [ ] 尝试互联网
   :LOGBOOK:
   CLOCK: [2016-12-19 周一 13:13]--[2016-12-19 周一 13:52] =>  0:39
   CLOCK: [2016-12-19 周一 12:10]--[2016-12-19 周一 12:47] =>  0:37
   CLOCK: [2016-12-19 周一 12:01]--[2016-12-19 周一 12:07] =>  0:06
   :END:
** TODO [#C] Multiplayer Game Programming
** TODO [#B] 面向对象的游戏开发[27%]
   - [X] 简介
   - [X] 游戏开发过程
   - [X] 游戏开发中的软件工程
   - [ ] 游戏中的面向对象设计
   - [ ] 游戏开发的组件模型
   - [ ] 跨平台游戏开发
   - [ ] 游戏对象
   - [ ] 设计驱动的控制
   - [ ] 迭代开发策略
   - [ ] 游戏职责分工
   - [ ] 案例分析
   :LOGBOOK:
   CLOCK: [2017-02-10 周五 16:51]--[2017-02-10 周五 17:17] =>  0:26
   CLOCK: [2017-02-10 周五 13:27]--[2017-02-10 周五 13:49] =>  0:22
   CLOCK: [2017-02-10 周五 13:08]--[2017-02-10 周五 13:12] =>  0:04
   CLOCK: [2017-02-09 周四 21:20]--[2017-02-09 周四 22:10] =>  0:50
   CLOCK: [2017-02-08 周三 22:51]--[2017-02-08 周三 23:27] =>  0:36
   CLOCK: [2017-02-08 周三 22:32]--[2017-02-08 周三 22:51] =>  0:19
   :END:
** TODO [#A] C++语言的设计及演化
   :LOGBOOK:
   CLOCK: [2017-02-09 周四 12:03]--[2017-02-09 周四 12:16] =>  0:13
   CLOCK: [2017-02-09 周四 10:49]--[2017-02-09 周四 11:49] =>  1:00
   CLOCK: [2017-02-09 周四 09:40]--[2017-02-09 周四 10:28] =>  0:48
   :END:
** TODO [#A] 深度探索 C++对象模型[14%]
   - [X] 关于对象
   - [ ] 构造函数语意学
   - [ ] Data 语意学
   - [ ] Function 语意学
   - [ ] 构造，析构，拷贝语意学
   - [ ] 运行期语意学
   - [ ] 站在对象模型的尖端
   :LOGBOOK:
   CLOCK: [2017-02-19 周日 17:29]--[2017-02-19 周日 17:53] =>  0:24
   CLOCK: [2017-02-18 周六 18:33]--[2017-02-18 周六 18:50] =>  0:17
   CLOCK: [2017-02-18 周六 17:31]--[2017-02-18 周六 18:18] =>  0:47
   :END:
** TODO [#A] C++标准库[21%]
   - [X] 关于本书
   - [X] C++及标准库简介
   - [X] 语言新特性
   - [X] 一般概念
   - [ ] 通用工具
   - [ ] 标准模版库
   - [ ] STL 容器
   - [ ] 细探 STL 容器成员
   - [ ] STL 迭代器
   - [ ] STL 函数对象及 Lambda
   - [ ] STL 算法
   - [ ] 特殊容器
   - [ ] 字符串
   - [ ] 正则表达式
   - [ ] 以 Stream 完成 I/O
   - [ ] 国际化
   - [ ] 数值
   - [ ] 并发
   - [ ] 分配器
   :LOGBOOK:
   CLOCK: [2017-03-08 周三 11:38]--[2017-03-08 周三 12:06] =>  0:28
   CLOCK: [2017-02-23 周四 19:39]--[2017-02-23 周四 20:11] =>  0:32
   CLOCK: [2017-02-23 周四 17:26]--[2017-02-23 周四 19:25] =>  1:59
   CLOCK: [2017-02-20 周一 20:53]--[2017-02-20 周一 21:48] =>  0:55
   CLOCK: [2017-02-20 周一 20:00]--[2017-02-20 周一 20:42] =>  0:42
   CLOCK: [2017-02-19 周日 18:28]--[2017-02-19 周日 19:25] =>  0:57
   :END:
** TODO [#B] 代码大全 2[5%]
   - [X] 欢迎进入软件构建的世界
   - [X] 用隐喻来更充分地理解软件开发
   - [ ] 三思而后行
   - [ ] 关键的“构建”决策
   - [ ] 软件构建中的设计
   - [ ] 可以工作的类
   - [ ] 高质量的子程序
   - [ ] 防御式编程
   - [ ] 伪代码编写过程
   - [ ] 使用变量的一般事项
   - [ ] 变量名的力量
   - [ ] 基本数据类型
   - [ ] 不常见的数据类型
   - [ ] 组织直线型代码
   - [ ] 使用条件语句
   - [ ] 控制循环
   - [ ] 不常见的控制结构
   - [ ] 表驱动法
   - [ ] 一般控制问题
   - [ ] 软件质量概述
   - [ ] 协同构建
   - [ ] 开发者测试
   - [ ] 调试
   - [ ] 重构
   - [ ] 代码调整策略
   - [ ] 代码调整技术
   - [ ] 程序规模对构建的影响
   - [ ] 管理构建
   - [ ] 集成
   - [ ] 编程工具
   - [ ] 布局与风格
   - [ ] 自说明代码
   - [ ] 个人性格
   - [ ] 软件工艺的话题
   - [ ] 何处有更多信息
   :LOGBOOK:
   CLOCK: [2017-02-19 周日 22:02]--[2017-02-19 周日 22:27] =>  0:25
   CLOCK: [2017-02-19 周日 21:51]--[2017-02-19 周日 22:02] =>  0:11
   :END:
** WAIT [#C] C++模板元编程[58%]
   - State "WAIT"       from "TODO"       [2017-03-04 周六 16:59] \\
     it's not the right time to read it;
   - [X] 概论
   - [X] Traits 和类型操纵
   - [X] 深入探索元函数
   - [X] 整型外覆器和操作
   - [X] 序列与迭代器
   - [X] 算法
   - [X] 视图与迭代适配器
   - [ ] 诊断
   - [ ] 跨越编译期和运行边界
   - [ ] 领域特定的嵌入式语言
   - [ ] DSEL 设计演练
   - [ ] 附录
   :LOGBOOK:
   CLOCK: [2017-03-04 周六 16:47]--[2017-03-04 周六 16:58] =>  0:11
   CLOCK: [2017-03-03 周五 23:11]--[2017-03-03 周五 23:15] =>  0:04
   CLOCK: [2017-03-03 周五 20:10]--[2017-03-03 周五 20:48] =>  0:38
   CLOCK: [2017-03-03 周五 10:03]--[2017-03-03 周五 11:05] =>  1:02
   CLOCK: [2017-03-02 周四 22:28]--[2017-03-02 周四 23:00] =>  0:32
   CLOCK: [2017-03-02 周四 20:50]--[2017-03-02 周四 22:18] =>  1:28
   CLOCK: [2017-03-02 周四 18:48]--[2017-03-02 周四 19:27] =>  0:39
   CLOCK: [2017-03-02 周四 17:10]--[2017-03-02 周四 18:12] =>  1:02
   CLOCK: [2017-03-02 周四 15:31]--[2017-03-02 周四 15:59] =>  0:28
   CLOCK: [2017-03-01 周三 23:33]--[2017-03-01 周三 23:39] =>  0:06
   CLOCK: [2017-03-01 周三 20:26]--[2017-03-01 周三 21:44] =>  1:18
   CLOCK: [2017-03-01 周三 16:49]--[2017-03-01 周三 17:31] =>  0:42
   CLOCK: [2017-03-01 周三 15:15]--[2017-03-01 周三 16:03] =>  0:48
   CLOCK: [2017-02-23 周四 20:22]--[2017-02-23 周四 20:37] =>  0:15
   :END:
** TODO [#B] 面向对象分析与设计[0%]
   - [ ] 复杂性
   - [ ] 对象模型
   - [ ] 类与对象
   - [ ] 分类
   - [ ] 表示法
   - [ ] 过程
   - [ ] 实战
   - [ ] 系统架构--基于卫星的导航
   - [ ] 控制系统--交通管理
   - [ ] 人工智能--密码分析
   - [ ] 数据采集--气象监测站
   - [ ] Web 应用--休假跟踪系统
   - [ ] 附录
   :LOGBOOK:
   CLOCK: [2017-02-20 周一 14:00]--[2017-02-20 周一 14:45] =>  0:45
   :END:
** TODO [#B] 计算机体系结构--量化研究方法[0%]
   - [ ] 量化设计与分析基础
   - [ ] 存储器层次结构设计
   - [ ] 指令级并行及其开发
   - [ ] 向量,SIMD,和 GPU 体系结构中的数据级并行
   - [ ] 线程级并行
   - [ ] 指令集基本原理
   - [ ] 存储器层次结构回顾
   - [ ] 流水线：基础与中级概念
   :LOGBOOK:
   :END:
** TODO [#C] C++设计新思维[0%]
   - [ ] 基于 Policy 的 Class 设计
   - [ ] 技术
   - [ ] Typelists
   - [ ] 小型对象分配技术
   - [ ] 泛化仿函数
   - [ ] Singletons 实作技术
   - [ ] 智能指针
   - [ ] 对象工厂
   - [ ] 抽象工厂
   - [ ] Visitor
   - [ ] Multimethods
   - [ ] 附录
   :LOGBOOK:
   :END:
** TODO [#B] 垃圾回收的算法和实现[0%]
   - [ ] 学习 GC 之前
   - [ ] GC 标记-清除算法
   - [ ] 引用计数法
   - [ ] GC 复制算法
   - [ ] GC 标记-压缩算法
   - [ ] 保守式 GC
   - [ ] 分代垃圾回收
   - [ ] 增量式垃圾回收
   - [ ] RC Immix 算法
   - [ ] Python 的垃圾回收
   - [ ] DalvikVM 的垃圾回收
   - [ ] Rubinius 的垃圾回收
   - [ ] V8 的垃圾回收
   - [ ] 附录
   :LOGBOOK:
   :END:
** TODO [#C] 垃圾回收算法手册[%]
** TODO [#B] 程序设计语言--实践之路[12%]
   - [X] 引言
   - [X] 程序设计语言的语法
   - [ ] 名字,作用域和约束
   - [ ] 语义分析
   - [ ] 目标机体系结构
   - [ ] 控制流
   - [ ] 数据类型
   - [ ] 子程序和控制抽象
   - [ ] 数据抽象和面向对象
   - [ ] 函数式语言
   - [ ] 逻辑式语言
   - [ ] 并发
   - [ ] 脚本语言
   - [ ] 构造可运行的程序
   - [ ] 运行时程序管理
   - [ ] 代码改进
   :LOGBOOK:
   CLOCK: [2017-04-10 Mon 16:36]--[2017-04-10 Mon 16:45] =>  0:09
   CLOCK: [2017-04-09 Sun 14:33]--[2017-04-09 Sun 14:47] =>  0:14
   CLOCK: [2017-04-08 Sat 17:11]--[2017-04-08 Sat 17:41] =>  0:30
   CLOCK: [2017-04-08 Sat 17:10]--[2017-04-08 Sat 17:51] =>  0:41
   CLOCK: [2017-03-24 Fri 17:23]--[2017-03-24 Fri 17:38] =>  0:15
   CLOCK: [2017-03-23 Thu 17:54]--[2017-03-23 Thu 18:23] =>  0:29
   CLOCK: [2017-03-23 Thu 16:23]--[2017-03-23 Thu 17:04] =>  0:41
   CLOCK: [2017-03-21 Tue 21:33]--[2017-03-21 Tue 21:54] =>  0:21
   CLOCK: [2017-03-21 Tue 20:29]--[2017-03-21 Tue 20:59] =>  0:30
   CLOCK: [2017-03-21 Tue 17:41]--[2017-03-21 Tue 18:17] =>  0:36
   CLOCK: [2017-03-21 Tue 17:02]--[2017-03-21 Tue 17:32] =>  0:30
   CLOCK: [2017-03-21 周二 16:14]--[2017-03-21 周二 16:20] =>  0:06
   CLOCK: [2017-03-21 周二 13:39]--[2017-03-21 周二 14:03] =>  0:24
   :END:
** TODO [#B] 编程原本[8%]
   - [X] 基础
   - [ ] 变换及其轨道
   - [ ] 可结合运算
   - [ ] 线性序
   - [ ] 有序代数结构
   - [ ] 迭代器
   - [ ] 坐标系统
   - [ ] 后继可变的坐标
   - [ ] 拷贝
   - [ ] 重整
   - [ ] 划分和归并
   - [ ] 复合对象
   :LOGBOOK:
   CLOCK: [2017-02-22 周三 21:34]--[2017-02-22 周三 21:52] =>  0:18
   CLOCK: [2017-02-22 周三 20:47]--[2017-02-22 周三 21:29] =>  0:42
   :END:
** TODO [#A] 算法[0%]
   - [ ] 基础
   - [ ] 排序
   - [ ] 查找
   - [ ] 图
   - [ ] 字符串
   - [ ] 背景
   :LOGBOOK:
   CLOCK: [2017-03-20 周一 22:51]--[2017-03-20 周一 23:16] =>  0:25
   CLOCK: [2017-03-20 周一 20:32]--[2017-03-20 周一 21:08] =>  0:36
   CLOCK: [2017-03-18 周六 21:58]--[2017-03-18 周六 22:52] =>  0:54
   CLOCK: [2017-03-17 周五 17:02]--[2017-03-17 周五 18:20] =>  1:18
   CLOCK: [2017-03-15 周三 20:23]--[2017-03-15 周三 20:26] =>  0:03
   CLOCK: [2017-02-24 周五 11:41]--[2017-02-24 周五 12:32] =>  0:51
   CLOCK: [2017-02-23 周四 23:23]--[2017-02-24 周五 00:14] =>  0:51
   :END:
** TODO [#A] 泛型编程与 STL[0%]
   - [ ] STL 巡礼
   - [ ] 算法与区间
   - [ ] 再论 Iterators
   - [ ] 函数对象
   - [ ] Containers
   - [ ] 基本概念
   - [ ] Iterators
   - [ ] 函数对象
   - [ ] 容器
   - [ ] 基本组件
   - [ ] 只读算法
   - [ ] 写算法
   - [ ] 排序和查找
   - [ ] 迭代器类
   - [ ] 函数对象类
   - [ ] 容器类
   - [ ] 附录 A
   :LOGBOOK:
   CLOCK: [2017-02-25 周六 16:27]--[2017-02-25 周六 16:54] =>  0:27
   :END:
** TODO [#A] 第一行代码[6%]
   - [X] 开始启程
   - [ ] 探究活动
   - [ ] UI 开发
   - [ ] 探究碎片
   - [ ] 广播机制
   - [ ] 持久化技术
   - [ ] 内容提供器
   - [ ] 手机多媒体
   - [ ] 使用网络技术
   - [ ] 探究服务
   - [ ] 基于位置的服务
   - [ ] Matrial Design
   - [ ] 继续进阶
   - [ ] 开发酷欧天气
   - [ ] 最后一步--将应用发布到 360 应用商店
   :LOGBOOK:
   CLOCK: [2017-02-26 周日 00:45]--[2017-02-26 周日 01:34] =>  0:49
   CLOCK: [2017-02-25 周六 23:25]--[2017-02-25 周六 23:44] =>  0:19
   :END:
** TODO [#B] STL 源码剖析[11%]
   - [X] STL 概论与版本简介
   - [ ] allocator
   - [ ] iterators 概念与 traits 编程技法
   - [ ] 序列式容器
   - [ ] 关联式容器
   - [ ] 算法
   - [ ] 仿函数
   - [ ] adapters
   - [ ] 附录
   :LOGBOOK:
   CLOCK: [2017-03-09 周四 20:50]--[2017-03-09 周四 21:51] =>  1:01
   CLOCK: [2017-03-01 周三 14:57]--[2017-03-01 周三 15:07] =>  0:10
   CLOCK: [2017-02-28 周二 22:31]--[2017-02-28 周二 22:41] =>  0:10
   CLOCK: [2017-02-28 周二 21:58]--[2017-02-28 周二 22:23] =>  0:25
   CLOCK: [2017-02-25 周六 23:45]--[2017-02-26 周日 00:38] =>  0:53
   :END:
** TODO [#A] Effective C++[33%]
   - [X] 让自己习惯 C++
   - [X] 析构/析构/赋值运算
   - [X] 资源管理
   - [ ] 设计与声明
   - [ ] 实现
   - [ ] 继承与面向对象设计
   - [ ] 模版与泛型编程
   - [ ] 定制 new 和 delete
   - [ ] 杂项讨论
   :LOGBOOK:
   CLOCK: [2017-03-10 周五 19:35]--[2017-03-10 周五 21:35] =>  2:00
   CLOCK: [2017-03-09 周四 17:09]--[2017-03-09 周四 17:50] =>  0:41
   CLOCK: [2017-03-08 周三 23:33]--[2017-03-08 周三 23:40] =>  0:07
   :END:
** TODO [#A] Linux 多线程服务端编程[18%]
   - [ ] 线程安全的对象生命期管理
   - [ ] 线程同步精要
   - [ ] 多线程服务器的适用场合与常用编程模型
   - [ ] C++多线程系统编程精要
   - [ ] 高效的多线程日志
   - [ ] muduo 网络库简介
   - [ ] muduo 编程示范
   - [ ] muduo 网络库设计与实现
   - [ ] 分布式系统工程实践
   - [ ] C++编译链接模型精要
   - [ ] 反思 C++面向对象与虚函数
   - [ ] C++经验谈
   - [X] 谈一谈网络编程学习经验
   - [X] 入手学习 C++
   - [X] 关于 boost
   - [ ] 关于 TCP 并发连接的几个思考题与实验
   :LOGBOOK:
   CLOCK: [2017-03-10 周五 20:39]--[2017-03-10 周五 21:35] =>  0:56
   :END:
** TODO [#A] TCP/IP 详解[0%]p.6
   - [ ] Introduction
   - [ ] The Internet Address Architecture
   - [ ] Link Layer
   - [ ] ARP
   - [ ] IP
   - [ ] System Configuration:DHCP and Autoconfiguration
   - [ ] Firewalls and NAT
   - [ ] ICMPv4 ICMPv6
   - [ ] IGMP and MLD
   - [ ] UDP and IP Fragmentation
   - [ ] Name Resolution and the Domain Name System
   - [ ] TCP
   - [ ] TCP Connection Management
   - [ ] TCP Timeout and Retransmission
   - [ ] TCP Data Flow and Window Management
   - [ ] TCP Congestion Control
   - [ ] TCP Keepalive
   - [ ] Security
   :LOGBOOK:
   CLOCK: [2017-03-11 周六 14:34]--[2017-03-11 周六 15:10] =>  0:36
   CLOCK: [2017-03-11 周六 12:45]--[2017-03-11 周六 13:10] =>  0:25
   :END:
** TODO [#A] Unix Network Programming[9%]
   - [X] Introdxuction
   - [X] TCP UDP SCTP
   - [X] Sockets Introduction
   - [ ] Elementary TCP Sockets
   - [ ] TCP Client/Server Example
   - [ ] I/O Multiplexing: select and poll
   - [ ] Socket Options
   - [ ] Elementary UDP Sockets
   - [ ] Elementary SCTP Sockets
   - [ ] SCTP Client/Server Example
   - [ ] Name and Address Coversions
   - [ ] IPv4 and IPv6 Interoperability
   - [ ] Deamon Processes and the inetd Superserver
   - [ ] Advanced I/O Functions
   - [ ] Unix Domain Protocols
   - [ ] Nonblocking I/O
   - [ ] ioctl Operations
   - [ ] Routing Sockets
   - [ ] Key Management Sockets
   - [ ] Broadcasting
   - [ ] Muliticasting
   - [ ] Advanced UDP Sockets
   - [ ] Advanced SCTP Sockets
   - [ ] Out of Band Data
   - [ ] Signal-Driven I/O
   - [ ] Threads
   - [ ] IP Options
   - [ ] Raw Sockets
   - [ ] Datalink Access
   - [ ] Client/Server Design Alternatives
   - [ ] STREAMS
   - [ ] Appendix
   :LOGBOOK:
   CLOCK: [2017-03-23 Thu 00:35]--[2017-03-23 Thu 00:48] =>  0:13
   CLOCK: [2017-03-22 Wed 17:33]--[2017-03-22 Wed 18:07] =>  0:34
   CLOCK: [2017-03-22 Wed 16:51]--[2017-03-22 Wed 17:28] =>  0:37
   CLOCK: [2017-03-22 Wed 13:13]--[2017-03-22 Wed 13:44] =>  0:31
   CLOCK: [2017-03-21 Tue 22:03]--[2017-03-21 Tue 22:25] =>  0:22
   CLOCK: [2017-03-13 Mon 17:48]--[2017-03-13 Mon 18:09] =>  0:21
   CLOCK: [2017-03-13 Mon 16:17]--[2017-03-13 Mon 17:12] =>  0:55
   CLOCK: [2017-03-12 Sun 22:13]--[2017-03-12 Sun 22:50] =>  0:37
   CLOCK: [2017-03-12 Sun 18:52]--[2017-03-12 Sun 19:09] =>  0:17
   CLOCK: [2017-03-12 Sun 17:35]--[2017-03-12 Sun 18:26] =>  0:51
   CLOCK: [2017-03-12 Sun 15:38]--[2017-03-12 Sun 16:05] =>  0:27
   CLOCK: [2017-03-12 Sun 13:10]--[2017-03-12 Sun 13:40] =>  0:30
   CLOCK: [2017-03-11 Sat 17:24]--[2017-03-11 Sat 18:09] =>  0:45
   CLOCK: [2017-03-11 Sat 16:13]--[2017-03-11 Sat 17:08] =>  0:55
   :END:
** TODO [#A] 图解 TCP/IP[10%]
   - [X] 网络基础知识
   - [ ] TCP/IP 基础知识
   - [ ] 数据链路
   - [ ] IP 协议
   - [ ] IP 协议相关技术
   - [ ] TCP 与 UDP
   - [ ] 路由协议
   - [ ] 应用协议
   - [ ] 网络安全
   - [ ] 附录
   :LOGBOOK:
   CLOCK: [2017-03-13 周一 19:50]--[2017-03-13 周一 20:11] =>  0:21
   CLOCK: [2017-03-13 周一 19:05]--[2017-03-13 周一 19:45] =>  0:40
   :END:
** TODO [#A] Java 核心技术卷一[66%]
   - [X] Introduction
   - [X] The Java Programming Environment
   - [X] Fundamental Programming Structure in Java
   - [X] Objects and Class
   - [X] Inheritance
   - [X] Interface Lambda Expressions and Inner Classes
   - [ ] Exceptions Assertion,and Logging
   - [ ] Generic Programming
   - [ ] Clloctions
   :LOGBOOK:
   CLOCK: [2017-03-17 周五 16:14]--[2017-03-17 周五 16:33] =>  0:19
   CLOCK: [2017-03-17 周五 15:48]--[2017-03-17 周五 16:06] =>  0:18
   CLOCK: [2017-03-16 周四 20:47]--[2017-03-16 周四 21:05] =>  0:18
   CLOCK: [2017-03-16 周四 19:33]--[2017-03-16 周四 20:04] =>  0:31
   CLOCK: [2017-03-15 周三 20:30]--[2017-03-15 周三 21:09] =>  0:39
   :END:
* Homework
* Things
** TODO Blog
* Daily                                                             :@daily:
